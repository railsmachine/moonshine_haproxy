= Moonshine Haproxy

=== A plugin for Moonshine[http://github.com/railsmachine/moonshine]

A plugin for installing and managing HAProxy. It can also manage Apache as an SSL proxy for a HAProxy backend.

=== Instructions

* <tt>script/plugin install git://github.com/railsmachine/moonshine_haproxy.git</tt>
* Configure settings if needed
    configure(:haproxy => {:foo => true})
* Invoke the recipe(s) in your Moonshine manifest
    recipe :haproxy

=== Example Configuration in moonshine.yml

    :haproxy:
      :default_backend: apps
      :backends:
        - {:name: apps, :balance: roundrobin, :servers: [{:url: app1.example.com:80, :name: app1, :maxconn: 1000}, {:url: app2.example.com:80, :name: app2, :maxconn: 1000}]}


    # If :ssl is present, SSL through Apache, parodying to HAPrroxy, will automatically be setup
    :ssl:
      :certificate_file: /srv/example/shared/config/ssl/example.com.crt
      :certificate_key_file: /srv/example/shared/config/ssl/example.com.key

=== Custom Error Pages

If you'd like to replace the default haproxy error pages, you can do so by adding the following to the :haproxy: section in config/moonshine.yml:

    :haproxy:
      :errorfiles:
        500: /srv/yoursite/current/public/500.html
        
The status codes that haproxy will handle this way are: 400, 403, 408, 500, 502, 503, and 504.

=== Notes about apache and apache2ctl status

'apache2ctl status' normally pulls from http://localhost/server-status?auto for its data. This would be served by haproxy though, and would be forwarded on to the configured backends. Hitting https wouldn't work either, since it's just forwarding to haproxy, which would forward to the backends.

To deal with this, moonshine_haproxy configures apache to listen on port 81 on localhost only. This means you can hit http://localhost:81/server-status?auto . 'apache2ctl status' is smart enough to do this by default.